---
name: ci

on:  # yamllint disable-line rule:truthy
  push:  # non-tagged pushes to master
    branches:
      - master
    tags-ignore:
      - '*'
    paths-ignore:
      - '**/*.md'
      - './build-bin/*lint'
      - ./build-bin/mlc_config.json
  pull_request:  # pull requests targeted at the master branch.
    branches:
      - master
    paths-ignore:
      - '**/*.md'
      - './build-bin/*lint'
      - ./build-bin/mlc_config.json
  workflow_dispatch:

jobs:
  lint:
    name: lint
    runs-on: ubuntu-24.04  # newest available distribution, aka noble
    if: "!contains(github.event.head_commit.message, 'maven-release-plugin')"
    continue-on-error: true  # Allow the pipeline to continue even if lint fails
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Lint
        run: |
          build-bin/configure_lint
          build-bin/lint

  build:
    runs-on: ubuntu-24.04
    if: "!contains(github.event.head_commit.message, 'maven-release-plugin')"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          # yamllint disable-line rule:line-length
          key: ${{ runner.os }}-npm-${{ hashFiles('zipkin-lens/package-lock.json') }}
      - name: Build
        run: |
          build-bin/maven_go_offline
          build-bin/maven/maven_build -DskipTests

  test:
    needs: build  # Only depends on build now, not lint
    name: test (JDK ${{ matrix.java_version }})
    runs-on: ubuntu-24.04  # newest available distribution, aka noble
    # skip commits made by the release plugin
    if: "!contains(github.event.head_commit.message, 'maven-release-plugin')"
    strategy:
      fail-fast: false  # don't fail fast as some failures are LTS specific
      matrix:  # match with maven-enforcer-plugin rules in pom.xml
        include:
          - java_version: 17  # earliest LTS supported by Spring Boot 3
            maven_args: -Prelease -Dgpg.skip
          - java_version: 21  # Most recent LTS
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'  # zulu as it supports a wide version range
          java-version: ${{ matrix.java_version }}
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          # yamllint disable-line rule:line-length
          key: ${{ runner.os }}-jdk-${{ matrix.java_version }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-jdk-${{ matrix.java_version }}-maven-
      - name: Cache NPM Packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          # yamllint disable-line rule:line-length
          key: ${{ runner.os }}-npm-packages-${{ hashFiles('zipkin-lens/package-lock.json') }}
      - name: Test without Docker
        run: |
          build-bin/maven_go_offline &&
          build-bin/test -DexcludedGroups=docker ${{ matrix.maven_args }}

  test_docker:
    needs: build
    runs-on: ubuntu-24.04  # newest available distribution, aka noble
    # skip commits made by the release plugin
    if: "!contains(github.event.head_commit.message, 'maven-release-plugin')"
    strategy:
      matrix:
        include:
          - name: zipkin-collector-activemq
          - name: zipkin-collector-kafka
          - name: zipkin-collector-rabbitmq
          - name: zipkin-storage-cassandra
          - name: zipkin-storage-elasticsearch
          - name: zipkin-storage-mysql-v1
          - name: zipkin-server
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'  # zulu as it supports a wide version range
          java-version: '21'  # Most recent LTS
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          # yamllint disable-line rule:line-length
          key: ${{ runner.os }}-jdk-${{ matrix.java_version }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-jdk-${{ matrix.java_version }}-maven-
      # Don't attempt to cache Docker. Sensitive information can be stolen
      # via forks, and login session ends up in ~/.docker. This is ok because
      # we publish DOCKER_PARENT_IMAGE to ghcr.io, hence local to the runner.
      - name: Test with Docker
        # configure_test seeds NPM cache, which isn't needed for these tests.
        #
        # What we are doing here is configuring docker, then installing the
        # module's dependencies prior to testing it with docker. This allows
        # us to avoid running tests except the leaf module.
        run: |
          build-bin/docker/configure_docker &&
          build-bin/maven/maven_go_offline &&
          build-bin/maven/maven_build -pl :${{ matrix.name }} --am &&
          build-bin/test -Dgroups=docker -pl :${{ matrix.name }}
        env:
          MAVEN_GOAL: install  # docker build needs dependencies in mavenLocal
          MAVEN_CONFIG: '-Dlicense.skip=true'  # license check already run

  create_release:
    needs: [test, test_docker]
    runs-on: ubuntu-24.04
    # yamllint disable-line rule:line-length
    if: "!contains(github.event.head_commit.message, 'maven-release-plugin') && github.ref == 'refs/heads/master'"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-jdk-17-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-jdk-17-maven-
      - name: Create Release
        env:
          GH_USER: ${{ secrets.GH_USER }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          build-bin/git/login_git
          VERSION=3.4.5
          build-bin/maven/maven_release "release-${VERSION}"
